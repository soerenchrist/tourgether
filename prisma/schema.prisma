// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

model Tour {
    id String @id @default(cuid())
    name String
    description String @db.VarChar(2000)
    elevationUp Int
    elevationDown Int
    distance Int
    date DateTime
    startTime DateTime?
    endTime DateTime?
    tracks Track[]
    creatorId String
    creator User @relation(fields: [creatorId], references: [id])
}

model Track {
    id String @id @default(cuid())
    name String
    file_url String
    tour Tour @relation(fields: [tourId], references: [id])
    tourId String
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    createdTours Tour[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
